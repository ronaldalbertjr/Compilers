log
&
log
{}
=
'&funcao'
95
[=]
^
reduce
&
reduce
{}
=
'&funcao'
115
[=]
^
a
&
a
[]
0
1
[<=]
1
2
[<=]
2
3
[<=]
3
4
[<=]
4
5
[<=]
=
^
a
@
{}
'&funcao'
200
[<=]
0
3
reduce
@
$
1
log
@
$
^
b
&
b
[]
0
{}
'&funcao'
231
[<=]
[<=]
1
{}
'&funcao'
252
[<=]
[<=]
=
^
pipe
&
pipe
{}
'&funcao'
305
[<=]
=
^
b
@
9
2
pipe
@
$
1
log
@
$
^
.
msg
&
msg
arguments
@
0
[@]
=
^
msg
@
println
#
undefined
^
undefined
@
'&retorno'
@
~
a
&
a
arguments
@
0
[@]
=
^
f
&
f
arguments
@
1
[@]
=
^
x
&
x
arguments
@
2
[@]
=
^
i
&
i
0
=
^
i
@
a
@
size
[@]
<
!
190
?
x
a
@
i
@
[@]
x
@
i
@
3
f
@
$
=
^
i
i
@
1
+
=
^
i
@
a
@
size
[@]
<
158
?
x
@
'&retorno'
@
~
undefined
@
'&retorno'
@
~
x
&
x
arguments
@
0
[@]
=
^
y
&
y
arguments
@
1
[@]
=
^
x
@
y
@
+
'&retorno'
@
~
undefined
@
'&retorno'
@
~
x
&
x
arguments
@
0
[@]
=
^
2
x
@
*
'&retorno'
@
~
undefined
@
'&retorno'
@
~
x
&
x
arguments
@
0
[@]
=
^
x
@
1
+
'&retorno'
@
~
undefined
@
'&retorno'
@
~
f
&
f
arguments
@
2
[@]
=
^
x
&
x
arguments
@
3
[@]
=
^
x
@
1
f
@
$
'&retorno'
@
~
undefined
@
'&retorno'
@
~
af
&
af
arguments
@
0
[@]
=
^
x
&
x
arguments
@
1
[@]
=
^
af
@
{}
'&funcao'
273
[<=]
x
@
3
reduce
@
$
'&retorno'
@
~
undefined
@
'&retorno'
@
~

log
&
log
{}
=
'&funcao'
59
[=]
^
map
&
map
{}
=
'&funcao'
137
[=]
^
forEach
&
forEach
{}
=
'&funcao'
180
[=]
^
a
&
a
[]
0
1
[<=]
1
2
[<=]
2
3
[<=]
3
4
[<=]
=
^
{}
'&funcao'
271
[<=]
1
map
@
$
1
log
@
$
^
.
msg
&
msg
arguments
@
0
[@]
=
^
msg
@
println
#
undefined
^
undefined
@
'&retorno'
@
~
x
&
x
arguments
@
1
[@]
=
^
)
&
)
arguments
@
2
[@]
=
^
res
@
j
@
x
@
1
f
@
$
[=]
'&retorno'
@
~
undefined
@
'&retorno'
@
~
a
&
a
arguments
@
0
[@]
=
^
{}
'&funcao'
79
[<=]
'&retorno'
@
~
undefined
@
'&retorno'
@
~
a
&
a
arguments
@
0
[@]
=
^
f
&
f
arguments
@
1
[@]
=
^
res
&
res
[]
=
^
{}
'&funcao'
116
[<=]
1
forEach
@
$
^
res
@
'&retorno'
@
~
undefined
@
'&retorno'
@
~
array
&
array
arguments
@
0
[@]
=
^
funcao
&
funcao
arguments
@
1
[@]
=
^
i
&
i
0
=
^
i
@
array
@
size
[@]
<
!
242
?
array
@
i
@
[@]
i
@
2
funcao
@
$
^
i
i
@
1
+
=
^
i
@
array
@
size
[@]
<
214
?
undefined
@
'&retorno'
@
~
x
&
x
arguments
@
1
[@]
=
^
x
@
x
@
*
1
+
'&retorno'
@
~
undefined
@
'&retorno'
@
~
a
&
a
arguments
@
0
[@]
=
^
{}
'&funcao'
247
[<=]
'&retorno'
@
~
undefined
@
'&retorno'
@
~
